{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"jsoncf \u00b6 prettify json string from clipboard","title":"Home"},{"location":"#jsoncf","text":"prettify json string from clipboard","title":"jsoncf"},{"location":"modules/","text":"Documentation for jsoncf \u00b6 prettify () \u00b6 prettify json string from clipboard. get data from clipboard dump data to local data.json dumps to local terminal Source code in jsoncf/main.py 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 def prettify (): \"\"\"prettify json string from clipboard. 1. get data from clipboard 2. dump data to local data.json 3. dumps to local terminal \"\"\" json_file : str = 'data.json' args : list = sys . argv if len ( args ) > 1 : content_list : list = args [ 1 :] content : str = \" \" . join ( content_list ) else : content = clipboard . paste () try : content_eval = eval ( content ) except NameError : content_eval = json . loads ( content ) json . dump ( content_eval , open ( json_file , 'w' , encoding = 'utf-8' ), indent = True , ensure_ascii = False ) text : str = json . dumps ( content_eval , indent = True , ensure_ascii = False ) . encode ( 'utf-8' ) . decode () return text","title":"Modules"},{"location":"modules/#documentation-for-jsoncf","text":"","title":"Documentation for jsoncf"},{"location":"modules/#jsoncf.main.prettify","text":"prettify json string from clipboard. get data from clipboard dump data to local data.json dumps to local terminal Source code in jsoncf/main.py 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 def prettify (): \"\"\"prettify json string from clipboard. 1. get data from clipboard 2. dump data to local data.json 3. dumps to local terminal \"\"\" json_file : str = 'data.json' args : list = sys . argv if len ( args ) > 1 : content_list : list = args [ 1 :] content : str = \" \" . join ( content_list ) else : content = clipboard . paste () try : content_eval = eval ( content ) except NameError : content_eval = json . loads ( content ) json . dump ( content_eval , open ( json_file , 'w' , encoding = 'utf-8' ), indent = True , ensure_ascii = False ) text : str = json . dumps ( content_eval , indent = True , ensure_ascii = False ) . encode ( 'utf-8' ) . decode () return text","title":"prettify()"}]}